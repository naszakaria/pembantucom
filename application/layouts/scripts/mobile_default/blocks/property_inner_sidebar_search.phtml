<?php
class property_sidebar_search
{
	protected	$_group = 1;
	protected	$_active =	1;
	protected	$_front_template;
	protected	$_translator;
	protected	$_view;
	protected	$postValue;
	protected	$_show_filter_button;
	
	public function __construct($view) 
	{
		$this->_front_template = Zend_Registry::get('front_template'); 
		$this->_view =	$view;	
		$this->_translator = Zend_Registry::get('translator');	
		$frontController = Zend_Controller_Front::getInstance();
		$controller = $frontController->getRequest()->getControllerName();
		$action = $frontController->getRequest()->getActionName();
		$this->_show_filter_button = (strtolower($controller)  == 'search' && strtolower($action)  == 'search' ) ? true : false;
		$this->postValue = $frontController->getRequest()->getPost();
		
		if($this->postValue && $this->postValue['filter'] && $this->postValue['filter']['filters'])
		{
			foreach($this->postValue['filter']['filters'] as $fieldObj)
			{
				$this->postValue[$fieldObj['field']]  = $fieldObj['value'];
			}
		}
	}
	
	public function class_body()
	{
		$version = new Eicra_License_Version();  
		
		$property_Country_DB = new Property_Model_DbTable_Country();
		$property_State_DB = new Property_Model_DbTable_State();
		$property_Area_DB = new Property_Model_DbTable_Area();
		$property_DB = new Property_Model_DbTable_Properties();
		$businessType_BD = new Property_Model_DbTable_BusinessType();
		$group_db = new Property_Model_DbTable_PropertyGroup();
		$mem_db 		= new Members_Model_DbTable_MemberList();

		$global_conf = Zend_Registry::get('global_conf');
		$currency = new Zend_Currency($global_conf['default_locale']);
		
		$min_property_price = $property_DB->getBorderItems('property_price', 'ASC');
		$max_property_price = $property_DB->getBorderItems('property_price', 'DESC');
		$max_property_price = round($max_property_price);
		$min_property_price_step = (int)(($max_property_price - $min_property_price) / 20);
		$max_property_price_step = (int)(($max_property_price - $min_property_price) / 5);		
		
		$min_feature_room_no = $property_DB->getBorderItems('feature_room_no', 'ASC');
		$max_feature_room_no = $property_DB->getBorderItems('feature_room_no', 'DESC');		
		$min_feature_room_no_step = 1;
		$max_feature_room_no_step = 2;		
		
		$min_feature_bedroom = $property_DB->getBorderItems('feature_bedroom', 'ASC');
		$max_feature_bedroom = $property_DB->getBorderItems('feature_bedroom', 'DESC');
		$min_feature_bedroom_step = 1;
		$max_feature_bedroom_step = 2;		
		
		$min_feature_bathroom = $property_DB->getBorderItems('feature_bathroom', 'ASC');
		$max_feature_bathroom = $property_DB->getBorderItems('feature_bathroom', 'DESC');
		$min_feature_bathroom_step = 1;
		$max_feature_bathroom_step = 2;		
		
		$min_property_size = $property_DB->getBorderItems('property_size', 'ASC');
		$max_property_size = $property_DB->getBorderItems('property_size', 'DESC');
		$min_property_size_step = 1000;
		$max_property_size_step = 2000;		
		
		$min_property_build_year = $property_DB->getBorderItems('property_build_year', 'ASC');
		$max_property_build_year = $property_DB->getBorderItems('property_build_year', 'DESC');
		$min_property_build_year_step = 2;
		$max_property_build_year_step = 5;		
		
		$min_property_lot = $property_DB->getBorderItems('property_lot', 'ASC');
		$max_property_lot = $property_DB->getBorderItems('property_lot', 'DESC');
		$min_property_lot_step = (int)(($max_property_lot - $min_property_lot) / 20);
		$max_property_lot_step = (int)(($max_property_lot - $min_property_lot) / 5);		
		
		$min_property_estate_surface = $property_DB->getBorderItems('property_estate_surface', 'ASC');
		$max_property_estate_surface = $property_DB->getBorderItems('property_estate_surface', 'DESC');
		$min_property_estate_surface_step = (int)(($max_property_estate_surface - $min_property_estate_surface) / 20);
		$max_property_estate_surface_step = (int)(($max_property_estate_surface - $min_property_estate_surface) / 5);		
		
		$min_property_land_surface = $property_DB->getBorderItems('property_land_surface', 'ASC');
		$max_property_land_surface = $property_DB->getBorderItems('property_land_surface', 'DESC');
		$min_property_land_surface_step = (int)(($max_property_land_surface - $min_property_land_surface) / 20);
		$max_property_land_surface_step = (int)(($max_property_land_surface - $min_property_land_surface) / 5);		
		
		$min_other_distance_hospital = $property_DB->getBorderItems('other_distance_hospital', 'ASC');
		$max_other_distance_hospital = $property_DB->getBorderItems('other_distance_hospital', 'DESC');
		$min_other_distance_hospital_step = (int)(($max_other_distance_hospital - $min_other_distance_hospital) / 20);
		$max_other_distance_hospital_step = (int)(($max_other_distance_hospital - $min_other_distance_hospital) / 5);		
		
		$min_other_distance_airport = $property_DB->getBorderItems('other_distance_airport', 'ASC');
		$max_other_distance_airport = $property_DB->getBorderItems('other_distance_airport', 'DESC');
		$min_other_distance_airport_step = (int)(($max_other_distance_airport - $min_other_distance_airport) / 20);
		$max_other_distance_airport_step = (int)(($max_other_distance_airport - $min_other_distance_airport) / 5);		
		
		$min_other_distance_railway = $property_DB->getBorderItems('other_distance_railway', 'ASC');
		$max_other_distance_railway = $property_DB->getBorderItems('other_distance_railway', 'DESC');
		$min_other_distance_railway_step = (int)(($max_other_distance_railway - $min_other_distance_railway) / 20);
		$max_other_distance_railway_step = (int)(($max_other_distance_railway - $min_other_distance_railway) / 5);		
		
		$min_other_distance_school = $property_DB->getBorderItems('other_distance_school', 'ASC');
		$max_other_distance_school = $property_DB->getBorderItems('other_distance_school', 'DESC');
		$min_other_distance_school_step = (int)(($max_other_distance_school - $min_other_distance_school) / 20);
		$max_other_distance_school_step = (int)(($max_other_distance_school - $min_other_distance_school) / 5);
		
			
		$countries = $property_Country_DB->getCountryInfo ();
		$mem_data = $mem_db->getAllMembers();
		
?>
	<script type="text/javascript">
	$(function() {
		autoSuggestion('post_code_advance_box', "<?php echo $this->_view->url( array('module'=> 'Property', 'controller' => 'frontend', 'action'     => 'searchname' ), 'adminrout',    true) ?>", {'post_code': ''}, ['property_primary_image', 'property_image', 'property_name', 'post_code', 'owner_name', 'property_postcode', 'property_location'], 'data/frontImages/property/property_image', 2);	
		autoSuggestion('property_name_box', "<?php echo $this->_view->url( array('module'=> 'Property', 'controller' => 'frontend', 'action'     => 'searchname' ), 'adminrout',    true) ?>", {'property_name': ''}, ['property_primary_image', 'property_image', 'property_name', 'property_name', 'owner_name', 'property_room', 'property_location'], 'data/frontImages/property/property_image', 2);
		$( "#property_owner_box" ).combobox();
		
		$('a.clear_search').click(function() {		
			$.each($('#formBlockSearch').serializeArray(), function(i, field) {					
				$('input[name="'+field.name+'"]').val('');		
				$('select[name="'+field.name+'"]').val('');		
			});	
		});
		
				
			
		var sliderObj = {
						grid_id : 'property-grid',
						slider_action : {
											form_id : 'formBlockSearch',
											hasTinyMCE: false,
											non_slider_field_arr:[
																{field_name: 'stars_arr[]'},
																{field_name: 'feature_amenities[]'},
																{field_name: 'feature_other_amenities[]'},
																{field_name: 'category_id_arr[]'},
																{field_name: 'feature_furnishing'},
																{field_name: 'property_type'}
											],
											field_arr :	[
															{
																field_name : 'property_price',
																slider_setting : {
																					change: function(e){ commonRangeSliderOnSlide(e, sliderObj, 0); },
																					slide: function(e){ commonRangeSliderOnChange(e, sliderObj, 0); },
																					min : <?php echo ($min_property_price) ? $min_property_price : 0; ?>,
																					max : <?php echo $max_property_price; ?>,
																					smallStep: <?php echo $min_property_price_step; ?>,
																					largeStep: <?php echo $max_property_price_step; ?>,
																					tickPlacement: "both",
																					selectionStart: "<?php echo ($this->postValue['property_price-gte'] && (strtolower($this->postValue['property_price-gte']) != 'any')) ? $this->postValue['property_price-gte'] : $min_property_price; ?>",
																					selectionEnd: "<?php echo ($this->postValue['property_price-lte'] && (strtolower($this->postValue['property_price-lte']) != 'any')) ? $this->postValue['property_price-lte'] : $max_property_price; ?>"
																				}
															},
															{
																field_name : 'feature_room_no',
																slider_setting : {
																					change: function(e){ commonRangeSliderOnSlide(e, sliderObj, 1); },
																					slide: function(e){ commonRangeSliderOnChange(e, sliderObj, 1); },
																					tooltip: {
																							enabled: true,
																							template: "#= kendo.toString(selectionStart, 'n0') # - #= kendo.toString(selectionEnd, 'n0') #"
																						},
																					min : <?php echo ($min_feature_room_no) ? $min_feature_room_no : 0; ?>,
																					max : <?php echo $max_feature_room_no; ?>,
																					smallStep: <?php echo $min_feature_room_no_step; ?>,
																					largeStep: <?php echo $max_feature_room_no_step; ?>,
																					tickPlacement: "both",
																					selectionStart: "<?php echo ($this->postValue['feature_room_no-gte'] && (strtolower($this->postValue['feature_room_no-gte']) != 'any')) ? $this->postValue['feature_room_no-gte'] : $min_feature_room_no; ?>",
																					selectionEnd: "<?php echo ($this->postValue['feature_room_no-lte'] && (strtolower($this->postValue['feature_room_no-lte']) != 'any')) ? $this->postValue['feature_room_no-lte'] : $max_feature_room_no; ?>"
																				}	
															},
															{
																field_name : 'feature_bedroom',
																slider_setting : {
																					change: function(e){ commonRangeSliderOnSlide(e, sliderObj, 2); },
																					slide: function(e){ commonRangeSliderOnChange(e, sliderObj, 2); },
																					tooltip: {
																							enabled: true,
																							template: "#= kendo.toString(selectionStart, 'n0') # - #= kendo.toString(selectionEnd, 'n0') #"
																						},
																					min : <?php echo ($min_feature_bedroom) ? $min_feature_bedroom : 0; ?>,
																					max : <?php echo $max_feature_bedroom; ?>,
																					smallStep: <?php echo $min_feature_bedroom_step; ?>,
																					largeStep: <?php echo $max_feature_bedroom_step; ?>,
																					tickPlacement: "both",
																					selectionStart: "<?php echo ($this->postValue['feature_bedroom-gte'] && (strtolower($this->postValue['feature_bedroom-gte']) != 'any')) ? $this->postValue['feature_bedroom-gte'] : $min_feature_bedroom; ?>",
																					selectionEnd: "<?php echo ($this->postValue['feature_bedroom-lte'] && (strtolower($this->postValue['feature_bedroom-lte']) != 'any')) ? $this->postValue['feature_bedroom-lte'] : $max_feature_bedroom; ?>"
																				}	
															},
															{
																field_name : 'feature_bathroom',
																slider_setting : {
																					change: function(e){ commonRangeSliderOnSlide(e, sliderObj, 3); },
																					slide: function(e){ commonRangeSliderOnChange(e, sliderObj, 3); },
																					tooltip: {
																							enabled: true,
																							template: "#= kendo.toString(selectionStart, 'n0') # - #= kendo.toString(selectionEnd, 'n0') #"
																						},
																					min : <?php echo ($min_feature_bathroom) ? $min_feature_bathroom : 0; ?>,
																					max : <?php echo $max_feature_bathroom; ?>,
																					smallStep: <?php echo $min_feature_bathroom_step; ?>,
																					largeStep: <?php echo $max_feature_bathroom_step; ?>,
																					tickPlacement: "both",
																					selectionStart: "<?php echo ($this->postValue['feature_bathroom-gte'] && (strtolower($this->postValue['feature_bathroom-gte']) != 'any')) ? $this->postValue['feature_bathroom-gte'] : $min_feature_bathroom; ?>",
																					selectionEnd: "<?php echo ($this->postValue['feature_bathroom-lte'] && (strtolower($this->postValue['feature_bathroom-lte']) != 'any')) ? $this->postValue['feature_bathroom-lte'] : $max_feature_bathroom; ?>"
																				}	
															},
															{
																field_name : 'property_size',
																slider_setting : {
																					change: function(e){ commonRangeSliderOnSlide(e, sliderObj, 4); },
																					slide: function(e){ commonRangeSliderOnChange(e, sliderObj, 4); },
																					min : <?php echo ($min_property_size) ? $min_property_size : 0; ?>,
																					max : <?php echo $max_property_size; ?>,
																					smallStep: <?php echo $min_property_size_step; ?>,
																					largeStep: <?php echo $max_property_size_step; ?>,
																					tickPlacement: "both",
																					selectionStart: "<?php echo ($this->postValue['property_size-gte'] && (strtolower($this->postValue['property_size-gte']) != 'any')) ? $this->postValue['property_size-gte'] : $min_property_size; ?>",
																					selectionEnd: "<?php echo ($this->postValue['property_size-lte'] && (strtolower($this->postValue['property_size-lte']) != 'any')) ? $this->postValue['property_size-lte'] : $max_property_size; ?>"
																				}	
															},
															{
																field_name : 'property_build_year',
																slider_setting : {
																					change: function(e){ commonRangeSliderOnSlide(e, sliderObj, 5); },
																					slide: function(e){ commonRangeSliderOnChange(e, sliderObj, 5); },
																					tooltip: {
																							enabled: true,
																							template: "#= kendo.toString(selectionStart, 'n0') # - #= kendo.toString(selectionEnd, 'n0') #"
																						},
																					min : <?php echo ($min_property_build_year) ? $min_property_build_year : 0; ?>,
																					max : <?php echo $max_property_build_year; ?>,
																					smallStep: <?php echo $min_property_build_year_step; ?>,
																					largeStep: <?php echo $max_property_build_year_step; ?>,
																					tickPlacement: "both",
																					selectionStart: "<?php echo ($this->postValue['property_build_year-gte'] && (strtolower($this->postValue['property_build_year-gte']) != 'any')) ? $this->postValue['property_build_year-gte'] : $min_property_build_year; ?>",
																					selectionEnd: "<?php echo ($this->postValue['property_build_year-lte'] && (strtolower($this->postValue['property_build_year-lte']) != 'any')) ? $this->postValue['property_build_year-lte'] : $max_property_build_year; ?>"
																				}	
															},
															{
																field_name : 'property_lot',
																slider_setting : {
																					change: function(e){ commonRangeSliderOnSlide(e, sliderObj, 6); },
																					slide: function(e){ commonRangeSliderOnChange(e, sliderObj, 6); },
																					min : <?php echo ($min_property_lot) ? $min_property_lot : 0; ?>,
																					max : <?php echo $max_property_lot; ?>,
																					smallStep: <?php echo $min_property_lot_step; ?>,
																					largeStep: <?php echo $max_property_lot_step; ?>,
																					tickPlacement: "both",
																					selectionStart: "<?php echo ($this->postValue['property_lot-gte'] && (strtolower($this->postValue['property_lot-gte']) != 'any')) ? $this->postValue['property_lot-gte'] : $min_property_lot; ?>",
																					selectionEnd: "<?php echo ($this->postValue['property_lot-lte'] && (strtolower($this->postValue['property_lot-lte']) != 'any')) ? $this->postValue['property_lot-lte'] : $max_property_lot; ?>"
																				}	
															},
															{
																field_name : 'property_estate_surface',
																slider_setting : {
																					change: function(e){ commonRangeSliderOnSlide(e, sliderObj, 7); },
																					slide: function(e){ commonRangeSliderOnChange(e, sliderObj, 7); },
																					min : <?php echo ($min_property_estate_surface) ? $min_property_estate_surface : 0; ?>,
																					max : <?php echo $max_property_estate_surface; ?>,
																					smallStep: <?php echo $min_property_estate_surface_step; ?>,
																					largeStep: <?php echo $max_property_estate_surface_step; ?>,
																					tickPlacement: "both",
																					selectionStart: "<?php echo ($this->postValue['property_estate_surface-gte'] && (strtolower($this->postValue['property_estate_surface-gte']) != 'any')) ? $this->postValue['property_estate_surface-gte'] : $min_property_estate_surface; ?>",
																					selectionEnd: "<?php echo ($this->postValue['property_estate_surface-lte'] && (strtolower($this->postValue['property_estate_surface-lte']) != 'any')) ? $this->postValue['property_estate_surface-lte'] : $max_property_estate_surface; ?>"
																				}	
															},
															{
																field_name : 'property_land_surface',
																slider_setting : {
																					change: function(e){ commonRangeSliderOnSlide(e, sliderObj, 8); },
																					slide: function(e){ commonRangeSliderOnChange(e, sliderObj, 8); },
																					min : <?php echo ($min_property_land_surface) ? $min_property_land_surface : 0; ?>,
																					max : <?php echo $max_property_land_surface; ?>,
																					smallStep: <?php echo $min_property_land_surface_step; ?>,
																					largeStep: <?php echo $max_property_land_surface_step; ?>,
																					tickPlacement: "both",
																					selectionStart: "<?php echo ($this->postValue['property_land_surface-gte' && (strtolower($this->postValue['property_land_surface-gte']) != 'any')]) ? $this->postValue['property_land_surface-gte'] : $min_property_land_surface; ?>",
																					selectionEnd: "<?php echo ($this->postValue['property_land_surface-lte'] && (strtolower($this->postValue['property_land_surface-lte']) != 'any')) ? $this->postValue['property_land_surface-lte'] : $max_property_land_surface; ?>"
																				}	
															},
															{
																field_name : 'other_distance_hospital',
																slider_setting : {
																					change: function(e){ commonRangeSliderOnSlide(e, sliderObj, 9); },
																					slide: function(e){ commonRangeSliderOnChange(e, sliderObj, 9); },
																					min : <?php echo ($min_other_distance_hospital) ? $min_other_distance_hospital : 0; ?>,
																					max : <?php echo $max_other_distance_hospital; ?>,
																					smallStep: <?php echo $min_other_distance_hospital_step; ?>,
																					largeStep: <?php echo $max_other_distance_hospital_step; ?>,
																					tickPlacement: "both",
																					selectionStart: "<?php echo ($this->postValue['other_distance_hospital-gte'] && (strtolower($this->postValue['other_distance_hospital-gte']) != 'any')) ? $this->postValue['other_distance_hospital-gte'] : $min_other_distance_hospital; ?>",
																					selectionEnd: "<?php echo ($this->postValue['other_distance_hospital-lte'] && (strtolower($this->postValue['other_distance_hospital-lte']) != 'any')) ? $this->postValue['other_distance_hospital-lte'] : $max_other_distance_hospital; ?>"
																				}	
															},
															{
																field_name : 'other_distance_airport',
																slider_setting : {
																					change: function(e){ commonRangeSliderOnSlide(e, sliderObj, 10); },
																					slide: function(e){ commonRangeSliderOnChange(e, sliderObj, 10); },
																					min : <?php echo ($min_other_distance_airport) ? $min_other_distance_airport : 0; ?>,
																					max : <?php echo $max_other_distance_airport; ?>,
																					smallStep: <?php echo $min_other_distance_airport_step; ?>,
																					largeStep: <?php echo $max_other_distance_airport_step; ?>,
																					tickPlacement: "both",
																					selectionStart: "<?php echo ($this->postValue['other_distance_airport-gte'] && (strtolower($this->postValue['other_distance_airport-gte']) != 'any')) ? $this->postValue['other_distance_airport-gte'] : $min_other_distance_airport; ?>",
																					selectionEnd: "<?php echo ($this->postValue['other_distance_airport-lte'] && (strtolower($this->postValue['other_distance_airport-lte']) != 'any')) ? $this->postValue['other_distance_airport-lte'] : $max_other_distance_airport; ?>"
																				}	
															},
															{
																field_name : 'other_distance_railway',
																slider_setting : {
																					change: function(e){ commonRangeSliderOnSlide(e, sliderObj, 11); },
																					slide: function(e){ commonRangeSliderOnChange(e, sliderObj, 11); },
																					min : <?php echo ($min_other_distance_railway) ? $min_other_distance_railway : 0; ?>,
																					max : <?php echo $max_other_distance_railway; ?>,
																					smallStep: <?php echo $min_other_distance_railway_step; ?>,
																					largeStep: <?php echo $max_other_distance_railway_step; ?>,
																					tickPlacement: "both",
																					selectionStart: "<?php echo ($this->postValue['other_distance_railway-gte'] && (strtolower($this->postValue['other_distance_railway-gte']) != 'any')) ? $this->postValue['other_distance_railway-gte'] : $min_other_distance_railway; ?>",
																					selectionEnd: "<?php echo ($this->postValue['other_distance_railway-lte'] && (strtolower($this->postValue['other_distance_railway-lte']) != 'any')) ? $this->postValue['other_distance_railway-lte'] : $max_other_distance_railway; ?>"
																				}	
															},
															{
																field_name : 'other_distance_school',
																slider_setting : {
																					change: function(e){ commonRangeSliderOnSlide(e, sliderObj, 12); },
																					slide: function(e){ commonRangeSliderOnChange(e, sliderObj, 12); },
																					min : <?php echo ($min_other_distance_school) ? $min_other_distance_school : 0; ?>,
																					max : <?php echo $max_other_distance_school; ?>,
																					smallStep: <?php echo $min_other_distance_school_step; ?>,
																					largeStep: <?php echo $max_other_distance_school_step; ?>,
																					tickPlacement: "both",
																					selectionStart: "<?php echo ($this->postValue['other_distance_school-gte'] && (strtolower($this->postValue['other_distance_school-gte']) != 'any')) ? $this->postValue['other_distance_school-gte'] : $min_other_distance_school; ?>",
																					selectionEnd: "<?php echo ($this->postValue['other_distance_school-lte'] && (strtolower($this->postValue['other_distance_school-lte']) != 'any')) ? $this->postValue['other_distance_school-lte'] : $max_other_distance_school; ?>"
																				}	
															}
														]
									},
                            messages: {                                            
										  common_msg_dialog_id 		:	'dialog_container_block',
										  common_ok					:	"<?php echo html_entity_decode($this->_translator->translator('common_ok'), ENT_QUOTES, 'UTF-8'); ?>"
									  }
					}
		commonRangeSlider(sliderObj);
			
		$('select.country_id').change(function() {	
			if($('select.country_id option:selected').val() == 'any' || $('select.country_id option:selected').val() =='')
			{
				$('select.area_id').html('<option value="any"><?php echo $this->_translator->translator("property_select_area"); ?></option>');	
				$('select.state_id').html('<option value="any"><?php echo $this->_translator->translator("property_select_state"); ?></option>');
			}
			else
			{	
				$.ajax({
					  url: "<?php echo $this->_view->url( array('module' =>'Property','controller' => 'frontend', 'action'     => 'states' ), 'adminrout',    true) ?>",
					  type: 'POST',
					  data: { id: $('select.country_id option:selected').val() },
					  beforeSend: function(){						
								$('select.state_id').html('<option value="any"><?php echo $this->_translator->translator("common_loading_language"); ?></option>');
								$('select.area_id').html('<option value="any"><?php echo $this->_translator->translator("property_select_area"); ?></option>');			
								$('#state_id_err').html('<img src="application/layouts/scripts/<?php echo $this->_front_template['theme_folder']; ?>/images/loader/mod-loader.gif" width="15" border="0" />');	
							 },
					  success: function(response){
						//alert(response);
						var json_arr = eval("("+response+")");
						var option = '<option value="any"><?php echo $this->_translator->translator("property_select_state"); ?></option>';				
						if(json_arr.status == 'ok')
						{
							for(var i = 0;i<json_arr.states.length;i++)
							{
								option += '<option value="'+json_arr.states[i].state_id+'" >'+stripslashes(json_arr.states[i].state_name)+'</option>';
							}
							$('select.state_id').html(option);
						}
						else
						{
							$('select.state_id').html('<option value="any">'+json_arr.msg+'</option>');
						}
						$('#state_id_err').html('');
					  }
				});
			}
		});
		
		$('select.state_id').change(function() {		
					
			if($('select.state_id option:selected').val() == 'any' || $('select.state_id option:selected').val() == '')
			{
				$('select.area_id').html('<option value="any"><?php echo $this->_translator->translator("property_select_area"); ?></option>');
			}
			else
			{
				$.ajax({
					  url: "<?php echo $this->_view->url( array('module' => 'Property', 'controller' => 'frontend', 'action'     => 'areas' ), 'adminrout',    true) ?>",
					  type: 'POST',
					  data: { id: $('select.state_id option:selected').val() },
					  beforeSend: function(){						
							$('select.area_id').html('<option value="any"><?php echo $this->_translator->translator("common_loading_language"); ?></option>');
							$('#area_id_err').html('<img src=""application/layouts/scripts/<?php echo $this->_front_template['theme_folder']; ?>/images/loader/mod-loader.gif" width="15" border="0" />');	
							},
					  success: function(response){
						//alert(response);
						var json_arr = eval("("+response+")");
						var option = '<option value="any"><?php echo $this->_translator->translator("property_select_area"); ?></option>';				
						if(json_arr.status == 'ok')
						{
							for(var i = 0;i<json_arr.cities.length;i++)
							{
								option += '<option value="'+json_arr.cities[i].city_id+'" >'+stripslashes(json_arr.cities[i].city)+'</option>';
							}
							$('select.area_id').html(option);
						}
						else
						{
							$('select.area_id').html('<option value="any">'+json_arr.msg+'</option>');
						}
						$('#area_id_err').html('');
					  }
				});
			}
		});
		
		
				
	});
	
	function stripslashes(str) 
	{
		str=str.replace(/\\'/g,'\'');
		str=str.replace(/\\"/g,'"');
		str=str.replace(/\\0/g,'\0');
		str=str.replace(/\\\\/g,'\\');
		return str;
	}
	
	function blokSearchFunction(settingSearchObj)
	{		
		if(settingSearchObj)
		{										
			var blockSearchObj = settingSearchObj;			
			blockSearchObj.search_action = {
							search_form_id : 'formBlockSearch',
							search_form_btn : 'searchButton',
							hasTinyMCE 	: false,
							show_loader_on_search_button: true,
							search_form_btn_click_event : function (responce_data){ 										
										$('nav#menu').mmenu().trigger( "close.mm" );	
								}
						};
			blockSearchObj.dataSource_transport_read_complete = function (responce_data){							
																									
							$('a.'+blockSearchObj.search_action.search_form_btn).html('<span class="glyphicon glyphicon-search"></span>'+" <?php echo $this->_translator->translator('block_inner_search_btn','','', $this->_front_template['theme_folder']); ?>");
							
						};	
			
			$('a.'+blockSearchObj.search_action.search_form_btn).unbind('click');				
			kendoSearchAction(blockSearchObj);			
		}
	}	
	</script>
    
	<form name="formBlockSearch" id="formBlockSearch" method="post" action="<?php echo $this->_view->url( array('module' => 'Property', 'controller' => 'search', 'action' => 'search', 'block_search' => 'search' ), 'Search-Property-List/*',    true); ?>" role="form">
        <div class="block block-sidebar-search">
			<h1><?php echo $this->_translator->translator('block_inner_search_title','','', $this->_front_template['theme_folder']); ?></h1>
			<!--<a  href="#" class="slick-searchtoggle advance"><span class="glyphicon glyphicon-search"></span> <?php //echo $this->_translator->translator('block_inner_search','','', $this->_front_template['theme_folder']); ?></a>-->
            	<div class="form-group">
            		<label for="post_code_advance_box"><?php echo $this->_translator->translator('block_search_postcode','','', $this->_front_template['theme_folder']); ?></label>
                    <input type="hidden" name="block_search" value="search" />
                    <input type="text" name="post_code" id="post_code_advance_box" placeholder="<?php echo $this->_translator->translator('common_any_language'); ?>" value="<?php  if(!empty($this->postValue['post_code'])){ echo $this->postValue['post_code']; } ?>" class="form-control">
            	</div>
                
                <div class="form-group">
            		<label for="post_code_advance_box"><?php echo $this->_translator->translator('block_search_owner','','', $this->_front_template['theme_folder']); ?></label>
                    <span class="ui-widget clearfix">
                        <select name="property_owner" id="property_owner_box" class="form-control">
                            <option value="any"><?php echo $this->_translator->translator('block_search_any','','', $this->_front_template['theme_folder']); ?></option>
                            <?php
                            if($mem_data)
                            {
                                foreach($mem_data as $key=>$value)
                                {
                                $selected = (!empty($this->postValue['property_owner']) && $this->postValue['property_owner'] == $key) ? ' selected="selected" ' : '';
                            ?>
                                <option value="<?php echo $key; ?>"<?php echo $selected; ?>><?php echo $this->_view->escape($value); ?></option>
                            <?php
                                }
                            }
                            ?>
                        </select>
                  	</span>
            	</div>
                
                <div class="form-group">
                    <input name="property_name" id="property_name_box" type="text" placeholder="<?php echo $this->_translator->translator('block_search_name','','', $this->_front_template['theme_folder']); ?>" value="<?php if(!empty($this->postValue['property_name'])){ echo $this->postValue['property_name']; } ?>" class="form-control" />
            	</div>
                
                <div class="form-group">
                    <select name="group_id" id="group_id" class="form-control">		
                        <option value="any"><?php echo $this->_translator->translator('property_menu1', '', 'Property'); ?></option>			 	
                        <?php
                        $group_list = $group_db->getGroupInfo();
                        foreach($group_list as $key => $value)
                        {
                                $selected = ($this->postValue['group_id'] == $key) ? 'selected=""selected' : '';
                                $this->_group	= ($this->postValue['group_id'] == $key) ? $this->postValue['group_id'] : $this->_group;                                    
                        ?>
                            <option value="<?php echo $key; ?>" <?php echo $selected; ?>><?php echo $this->_view->escape($value); ?></option>
                        <?php	
                        }
                        ?>
                    </select>
            	</div>  
                
                <div <?php if($locale_direction == 'rtl'){ ?> class="k-rtl" <?php } ?>>
                	<div class="form-group text-center">
                    <?php echo $this->_translator->translator('property_list_page_search_price','','Property').' ('.$currency->getSymbol().')'; ?><br>
                        <div id="rangeslider_property_price">
                            <input name="property_price-gte" id="property_price-gte" operator="gte" />
                            <input name="property_price-lte" id="property_price-lte" operator="lte" />
                        </div>
                    </div>
                    <div class="form-group text-center">
						<?php echo $this->_translator->translator('property_list_page_search_room','','Property'); ?><br>
                        <div id="rangeslider_feature_room_no">
                            <input name="feature_room_no-gte" id="feature_room_no-gte" operator="gte" />
                            <input name="feature_room_no-lte" id="feature_room_no-lte" operator="lte" />
                        </div>
                    </div>
                    <br>
                    <div class="form-group text-center">
						<?php echo $this->_translator->translator('property_front_page_property_bedroom_no','','Property'); ?><br>
                        <div id="rangeslider_feature_bedroom">
                            <input name="feature_bedroom-gte" id="feature_bedroom-gte" operator="gte" />
                            <input name="feature_bedroom-lte" id="feature_bedroom-lte" operator="lte" />
                        </div>
                    </div>
                    <br>
                    <div class="form-group text-center">
						<?php echo $this->_translator->translator('property_list_page_search_bathroom','','Property'); ?><br>
                        <div id="rangeslider_feature_bathroom">
                            <input name="feature_bathroom-gte" id="feature_bathroom-gte" operator="gte" />
                            <input name="feature_bathroom-lte" id="feature_bathroom-lte" operator="lte" />
                        </div>
                    </div>
                    <br>
                    <div class="form-group text-center">
						<?php echo $this->_translator->translator('property_block_advanced_search_label_property_size','','Property').' '.$this->_translator->translator('block_search_size_unit', '', '', $this->_front_template['theme_folder']); ?><br>
                        <div id="rangeslider_property_size">
                            <input name="property_size-gte" id="property_size-gte" operator="gte" />
                            <input name="property_size-lte" id="property_size-lte" operator="lte" />
                        </div>
                 	</div>
                    <br>
                    <div class="form-group text-center">
						<?php echo $this->_translator->translator('block_search_build_year_any','','', $this->_front_template['theme_folder']); ?><br>
                        <div id="rangeslider_property_build_year">
                            <input name="property_build_year-gte" id="property_build_year-gte" operator="gte" />
                            <input name="property_build_year-lte" id="property_build_year-lte" operator="lte" />
                        </div>
                    </div>
				</div>
                
                <div class="form-group">                           
                <select name="country_id"  id="country_id_search_box" class="country_id form-control">
                    <option value="any"><?php echo $this->_translator->translator('block_sidebar_search_country','','', $this->_front_template['theme_folder']); ?></option>
                    <?php
                        $selected_country_id = (empty($this->postValue['country_id']) || strtolower($this->postValue['country_id']) == '') ? $global_conf['default_country'] : $this->postValue['country_id'];
                        if($countries)
                        {
                            foreach($countries as $key=>$value)
                            {
                                $selected = ($selected_country_id == $key) ? ' selected="selected" ' : '';
    
                        ?>
                            <option value="<?php echo $key; ?>"<?php echo $selected; ?>><?php echo $value; ?></option>					
                        <?php
                        }
                        }
                    ?>
                </select>
                </div>
                
                <div class="form-group">  
                <select name="state_id" id="state_id_search_box" class="state_id form-control">
                    <option value="any"><?php echo $this->_translator->translator('block_sidebar_search_state','','', $this->_front_template['theme_folder']); ?></option>	
                    <?php
                        $state_info = $property_State_DB->getAllStateInfo($selected_country_id); 
                        if($state_info)
                        {
                            foreach($state_info as $key=>$value)
                            {
                                $selected = ($value['state_id'] == $this->postValue['state_id']) ? ' selected="selected" ' : '';
                                echo '<option value="'.$this->_view->escape($value['state_id']).'"'.$selected.'>'.$this->_view->escape($value['state_name']).'</option>';
                            }
                        }
                     ?>																		
                </select>
                </div>
                
                <div class="form-group">        
                    <select name="area_id" id="area_id_search_box" class="area_id form-control">
                    
                    <option value="any"><?php echo $this->_translator->translator('block_sidebar_search_area','','', $this->_front_template['theme_folder']); ?></option>	
                    <?php
                            $selected_state_id = (empty($this->postValue['state_id']) || strtolower($this->postValue['state_id']) == 'any') ? '' : $this->postValue['state_id'];
                            if(!empty($selected_state_id ))
                            {
                                $area_info = $property_Area_DB->getAllAreaInfo($selected_state_id); 
                                if($area_info)
                                {
                                    foreach($area_info as $key=>$value)
                                    {
                                        $selected = ($value['city_id'] == $this->postValue['area_id']) ? ' selected="selected" ' : '';
                                        echo '<option value="'.$this->_view->escape($value['city_id']).'"'.$selected.'>'.$this->_view->escape($value['city']).'</option>';
                                    }
                                }
                            }
                         ?>																		
                    </select>
                </div>     
                   
				<?php
                if($this->_show_filter_button == false)
                {
                ?>           	
                  <script>
					$(function() {
						$('a.searchButton').click(function() {				
							$('#formBlockSearch').submit();
						});
					});	
					</script> 
                    <?php
                }
                ?>  
				<a href="javascript:void(0);" class="searchButton btn btn-block"><span class="glyphicon glyphicon-search"></span> <?php echo $this->_translator->translator('block_inner_search_btn','','', $this->_front_template['theme_folder']); ?></a>
                  
                <!--<a href="javascript:void(0);" class="clear_search"><?php //echo $this->_translator->translator('block_inner_search_clear','','', $this->_front_template['theme_folder']); ?></a>-->
        		<?php echo $this->_view->partial('blocks/property_sidebar_searchFilter.phtml'); ?>
        </div>
        
        <?php
		if($this->_show_filter_button === true)
		{
		?>        	
            <!--<div class="block block-sidebar-search">
            	<a href="javascript:void(0);" class="searchButton btn btn-block"><span class="glyphicon glyphicon-search"></span> <?php echo $this->_translator->translator('block_inner_search_btn','','', $this->_front_template['theme_folder']); ?></a>
            </div>-->
		<?php
		}
		?>
	</form>
    
<?php
	}
}
	
	try
	{
		$advanced_search_class = new property_sidebar_search($this);
		$advanced_search_class->class_body();
	}
	catch(Exception $e)
	{
		echo $e->getMessage();
	}	
?>